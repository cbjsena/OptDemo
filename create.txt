pip freeze> requirements.txt
pip install -r requirements.txt

django-admin startproject optdemo_project .

# 기본 레이아웃 및 핵심 기능을 담당할 'core' 앱 생성
python manage.py startapp core

# 'Matching' 모델 관련 기능을 담당할 'matching_app' 생성
python manage.py startapp matching_app

python manage.py startapp matching_assignment_app
python manage.py startapp resource_allocation_app
python manage.py startapp routing_logistics_app
python manage.py startapp production_scheduling_app


# (추후 필요시) 다른 모델들을 위한 앱 생성
# python manage.py startapp allocate_app
# python manage.py startapp vcr_app
복사한 후
python manage.py makemigrations
python manage.py migrate
python manage.py runserver

# rebase
1. git rebase -i HEAD~3
2. i 입력하면 텍스트 수정 모드
3. 수정 후 ESC ->:wq -> Enter

# 마지막 커밋 메시지 변경 명령어
1. git commit --amend -m "Refactor: unify validation and data generation logic"


# 빌드 docker-compose build
# 검색 docker-compose image ls
# 실행 docker-compose up
# 확인 docker container ls
# 종료 docker-compose down
# docker-compose.yml에서 volume 경로만 수정 -> docker-compose up 또는 --force-recreate
# Dockerfile 수정 또는 패키지 변경 -> docker-compose up --build

# postgresql 설치 시 인스톨
1. pip install psycopg2-binary
# db 데이터가 없으므로 초기화 하는 명령 입력(현 app은 db 사용하지 않아서 문제 없음)
2. docker 실행 후 다른 창에 입력-> docker-compose exec web python manage.py migrate

###### 전문 서버
1. pip install gunicorn
# 쿠기 등으로 잘 안되는 경우 발생 확인 위해 시크릿모드 확인 필요
# 앱별 static 폴더 대신 한곳에 모두 모음
2. python manage.py collectstatic

####### docker-compose 분리
1. docker-compose.dev.yml 복사 생성
2. docker-compose -f docker-compose.dev.yml up